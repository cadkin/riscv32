TARGET              := riscv32_fpga.bit
BUILD_DIR           := build
BOARD               := xc7a100tcsg324-1

CONSTR_DIR          := constr
XDC                 := riscvcore.xdc

VIVADO              := vivado
VIVADO_PATH			:= $(shell which $(VIVADO) 2> /dev/null)
VIVADO_FLAGS        :=
TOP                 := rv_uart_top

MEM_GEN_TCL_PATH    := scripts/vivado/ip_mem_gen_cell.tcl
MEM_COE_TCL_PATH    := scripts/vivado/ip_mem_gen_cell_coe.tcl
MEM_CELL_NAMES		:= mem_cell_0 mem_cell_1 mem_cell_2 mem_cell_3 imem_cell_0 imem_cell_1 imem_cell_2 imem_cell_3
TMP_TCL_PATH        := /tmp/$(shell bash -c 'echo $$RANDOM')-${USER}-vivado.tcl

SYNTH_CHECKPOINT    := synth.checkpoint
IMPL_CHECKPOINT     := impl.checkpoint

RPT_PS_TIME_SUM     := post_synth_timing_summary.rpt
RPT_PS_POWER        := post_synth_power.rpt
RPT_PP_TIME_SUM     := post_place_timing_summary.rpt
RPT_PR_TIME_SUM     := post_route_timing_summary.rpt
RPT_PR_PATH_TIME    := post_route_path_timing.rpt
RPT_PR_CLOCK_UTIL   := post_route_clock_util.rpt
RPT_PR_UTIL         := post_route_utilization.rpt
RPT_PR_POWER        := post_route_power.rpt
RPT_IMPL_DRC        := impl_drc.rpt

VLOG_ANALYSIS       := xvlog
VLOG_ANALYSIS_FLAGS := --sv --relax
VLOG_ANALYSIS_TS    := analysis_timestamp.tmp

ELAB                := xelab
ELAB_FLAGS          := --debug typical --relax
ELAB_LIBRARIES		:= -L blk_mem_gen_v8_4_4
# Defines testbench module to run for sims, can be specified at runtime via 'make sim testbench=foobar'.
testbench           := testbench
ELAB_TS             := $(addprefix $(testbench),_elab_timestamp.tmp)

IP_TS               := ip_gen_timestamp.tmp
IP_DIR				:= ip

COE_TS              := coe_timestamp.tmp
COE_DIR             := c
# Basename for loading from coe, expects $(coe_basename)0.coe - $(coe_basename)3.coe to load from $(COE_DIR). Can be modified at runtime.
coe_basename        := testUart

SIM                 := xsim
SIM_FLAGS           :=
# This is default, can be specified to be longer if needed at runtime via 'make sim sim_time=XXns' or if finite 'make sim sim_time=all'.
sim_time            := 500ns

TB                  := $(shell find tb/ -type f -name '*.sv')
SRC                 := $(shell find src/ -type f -name '*.sv')
VHDL_SRC            := $(shell find src/ -type f -name '*.vhd')
MEM_SRC				:= $(join $(addsuffix /sim/,$(addprefix $(IP_DIR)/,$(MEM_CELL_NAMES))),$(addsuffix .v,$(MEM_CELL_NAMES)))
#SDB                := $(subst tb/,$(VLOG_ANALYSIS_OUT),$(subst src/,$(VLOG_ANALYSIS_OUT),$(SRC:.sv=.sdb)))

SHELL 				:= bash
.SHELLFLAGS			:= -ec
.ONESHELL:
.NOTPARALLEL:

$(foreach v, $(.VARIABLES), $(if $(filter file,$(origin $(v))), $(file >> varinfo,$(v)=$($(v)))))

init:

